name: Build USD

on:
  push:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
          repository: PixarAnimationStudios/OpenUSD
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11' 
    - name: Install boost
      uses: MarkusJx/install-boost@v2.4.5
      id: install-boost
      with:
      # REQUIRED: Specify the required boost version
      # A list of supported versions can be found here:
      # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
        boost_version: 1.78.0

      # NOTE: If a boost version matching all requirements cannot be found,
      # this build step will fail
    - name: Install python packages
      run: |
          python -m pip install --upgrade pip
          pip install PySide6
          pip install PyOpenGL

    - name: Run build scripts
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: python build_scripts/build_usd.py ./Build --build-variant release --toolset 143 --generator "Visual Studio 17 2022"
      env:
           BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
           
   

